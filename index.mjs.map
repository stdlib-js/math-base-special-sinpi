{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport isInfinite from '@stdlib/math-base-assert-is-infinite';\nimport cos from '@stdlib/math-base-special-cos';\nimport sin from '@stdlib/math-base-special-sin';\nimport abs from '@stdlib/math-base-special-abs';\nimport copysign from '@stdlib/math-base-special-copysign';\nimport PI from '@stdlib/constants-float64-pi';\n\n\n// MAIN //\n\n/**\n* Computes the value of `sin(πx)`.\n*\n* ## Notes\n*\n* -   `sin(-x) = -sin(x)`\n* -   `sin(+n) = +0`, where `n` is a positive integer\n* -   `sin(-n) = -sin(+n) = -0`, where `n` is a positive integer\n* -   `cos(-x) = cos(x)`\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = sinpi( 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = sinpi( 0.5 );\n* // returns 1.0\n*\n* @example\n* var y = sinpi( 0.9 );\n* // returns ~0.309\n*\n* @example\n* var y = sinpi( NaN );\n* // returns NaN\n*/\nfunction sinpi( x ) {\n\tvar ar;\n\tvar r;\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isInfinite( x ) ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction (reduce to [0,2))...\n\tr = x % 2.0; // sign preserving\n\tar = abs( r );\n\n\t// If `x` is an integer, the mod is an integer...\n\tif ( ar === 0.0 || ar === 1.0 ) {\n\t\treturn copysign( 0.0, r );\n\t}\n\tif ( ar < 0.25 ) {\n\t\treturn sin( PI*r );\n\t}\n\t// In each of the following, we further reduce to [-π/4,π/4)...\n\tif ( ar < 0.75 ) {\n\t\tar = 0.5 - ar;\n\t\treturn copysign( cos( PI*ar ), r );\n\t}\n\tif ( ar < 1.25 ) {\n\t\tr = copysign( 1.0, r ) - r;\n\t\treturn sin( PI*r );\n\t}\n\tif ( ar < 1.75 ) {\n\t\tar -= 1.5;\n\t\treturn -copysign( cos( PI*ar ), r );\n\t}\n\tr -= copysign( 2.0, r );\n\treturn sin( PI*r );\n}\n\n\n// EXPORTS //\n\nexport default sinpi;\n"],"names":["sinpi","x","ar","r","isnan","isInfinite","NaN","abs","copysign","sin","PI","cos"],"mappings":";;6qBA8DA,SAASA,EAAOC,GACf,IAAIC,EACAC,EACJ,OAAKC,EAAOH,IAGPI,EAAYJ,GAFTK,IAUI,KAHZJ,EAAKK,EADLJ,EAAIF,EAAI,KAIkB,IAAPC,EACXM,EAAU,EAAKL,GAElBD,EAAK,IACFO,EAAKC,EAAGP,GAGXD,EAAK,IAEFM,EAAUG,EAAKD,GADtBR,EAAK,GAAMA,IACoBC,GAE3BD,EAAK,MACTC,EAAIK,EAAU,EAAKL,GAAMA,EAClBM,EAAKC,EAAGP,IAEXD,EAAK,MAEDM,EAAUG,EAAKD,GADvBR,GAAM,MAC0BC,IAEjCA,GAAKK,EAAU,EAAKL,GACbM,EAAKC,EAAGP,GAChB"}